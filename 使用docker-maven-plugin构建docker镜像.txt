前言
    在学习docker中，我希望把spring-boot项目部署在docker容器中，这有两种方法、第一种在docker里安装tomcat、第二种把spring-boot项目制成镜像，然后通过镜像运行容器
    那么，spring-boot 项目制作docker镜像有很多方法，其中最佳的当数在项目pom内使用 docker-maven-plug 然后通过命令直接远程上传镜像，然后再通过镜像运行容器启动项目。



前提
    服务器成功安装 docker（可以通过 docker --version 查看）
    Docker 开启远程API（可以通过 http://ip:2375/version 查看是否有响应信息）




新建项目
    新建一个spring-boot项目，使其能够正常启动，并且能够正常访问。



修改POM
    在 pom 内追加 docker-maven-plugin 插件,具体代码如下：
    <plugin>
        <groupId>com.spotify</groupId>
        <artifactId>docker-maven-plugin</artifactId>
        <version>0.4.14</version>
        <configuration>
            <imageName>通过插件制成docker镜像的名称</imageName>
            <dockerDirectory>./</dockerDirectory>
            <dockerHost>http://服务器ip:2375</dockerHost>
            <resources>
                <resource>
                    <targetPath>/</targetPath>
                    <directory>${project.build.directory}</directory>
                    <include>${project.build.finalName}.jar</include>
                </resource>
            </resources>
        </configuration>
    </plugin>

    以上标签的具体解释：
        imageName：指定了镜像的名字，最好的命名是 xxxx/yyyy
        dockerDirectory：指定Dockerfile的位置
        dockerHost：指定Docker远程API地址
        resources：指那些需要和Dockerfile放在一起，在构建镜像时使用的文件，一般应用jar包需要纳入



添加Dockerfile
    在项目根路径下创建Dockerfile，具体配置如下：
    FROM java:8
    VOLUME /tmp
    ADD 项目正常打包jar文件名称.jar app.jar
    RUN bash -c 'touch /app.jar'
    ENV JAVA_OPTS=""
    ENTRYPOINT [ "sh", "-c", "java $JAVA_OPTS -Djava.security.egd=file:/dev/./urandom -jar /app.jar" ]

    以上代码具体解释：
    FROM java：指Docker Hub上官方提供的java镜像，有了这个基础镜像后，Dockerfile可以通过FROM指令直接获取它的状态——也就是在容器中java是已经安装的，接下来通过自定义的命令来运行Spring Boot应用。
    VOLUME /tmp：创建/tmp目录并持久化到Docker数据文件夹，因为Spring Boot使用的内嵌Tomcat容器默认使用/tmp作为工作目录。
    ADD xxxx-0.0.1-SNAPSHOT.jar app.jar：将应用jar包复制到/app.jar
    ENTRYPOINT：表示容器运行后默认执行的命令


创建Docker镜像
    mvn package docker:build



在服务器查看镜像
    docker images



通过镜像启动容器
    docker run -d -p 8080:8080 镜像名称



测试访问
    在浏览器输入 http://ip:8080 就可以看到正常的显示了


参考文章
    https://www.cnblogs.com/rouqinglangzi/p/10021838.html
    https://www.cnblogs.com/java-my-life/p/7001998.html
    https://blog.csdn.net/liubingyu12345/article/details/79015966
    https://www.cnblogs.com/atliwen/p/6101946.html


后续
=================================================================================================================================================

当然也可以不需要 Dockerfile 文件，直接在 pom 文件这样写：
<plugin>
    <groupId>com.spotify</groupId>
    <artifactId>docker-maven-plugin</artifactId>
    <version>0.4.14</version>
    <configuration>
        <imageName>916780135</imageName>
        <baseImage>java:8</baseImage>
        <entryPoint>["java", "-jar", "/${project.build.finalName}.jar"]</entryPoint>
        <dockerHost>http://45.40.252.55:2375</dockerHost>
        <resources>
            <resource>
                <targetPath>/</targetPath>
                <directory>${project.build.directory}</directory>
                <include>${project.build.finalName}.jar</include>
            </resource>
        </resources>
    </configuration>
</plugin>

=================================================================================================================================================
